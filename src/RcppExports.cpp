// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Powers
std::vector< arma::sp_mat > Powers(const arma::sp_mat& X, int p);
RcppExport SEXP sarabc_Powers(SEXP XSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    __result = Rcpp::wrap(Powers(X, p));
    return __result;
END_RCPP
}
// pred_sar
arma::colvec pred_sar(arma::sp_mat W, arma::mat X, double rho, arma::colvec beta, int p);
RcppExport SEXP sarabc_pred_sar(SEXP WSEXP, SEXP XSEXP, SEXP rhoSEXP, SEXP betaSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::sp_mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    __result = Rcpp::wrap(pred_sar(W, X, rho, beta, p));
    return __result;
END_RCPP
}
// sar_abc_cpp
List sar_abc_cpp(const arma::colvec& y, const arma::mat& X, const arma::sp_mat& W, const std::vector<double>& rho, const arma::mat& beta, const std::vector<double>& sweights, int N, int p, bool no_inv, bool no_moran);
RcppExport SEXP sarabc_sar_abc_cpp(SEXP ySEXP, SEXP XSEXP, SEXP WSEXP, SEXP rhoSEXP, SEXP betaSEXP, SEXP sweightsSEXP, SEXP NSEXP, SEXP pSEXP, SEXP no_invSEXP, SEXP no_moranSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::colvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type sweights(sweightsSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< bool >::type no_inv(no_invSEXP);
    Rcpp::traits::input_parameter< bool >::type no_moran(no_moranSEXP);
    __result = Rcpp::wrap(sar_abc_cpp(y, X, W, rho, beta, sweights, N, p, no_inv, no_moran));
    return __result;
END_RCPP
}
